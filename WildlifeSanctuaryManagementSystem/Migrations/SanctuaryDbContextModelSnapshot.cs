// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WildlifeSanctuaryManagementSystem.Data;

#nullable disable

namespace WildlifeSanctuaryManagementSystem.Migrations
{
    [DbContext(typeof(SanctuaryDbContext))]
    partial class SanctuaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheckupDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AnimalId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.CostManagement", b =>
                {
                    b.Property<int>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ResponsiblePersonId")
                        .HasColumnType("int");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.HasKey("CostId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("CostManagements");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.EnvironmentalData", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentId"));

                    b.Property<int>("ConductedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImpactType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.HasKey("AssessmentId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("EnvironmentalData");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportedById")
                        .HasColumnType("int");

                    b.Property<string>("ResolutionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.MedicalRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("NextCheckup")
                        .HasColumnType("datetime2");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("AnimalId");

                    b.ToTable("AnimalsMedicalRecords");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RangerId")
                        .HasColumnType("int");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProjectId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<DateTime>("LastRestockedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.Property<string>("StorageLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ResourceId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Sanctuary", b =>
                {
                    b.Property<int>("SanctuaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SanctuaryId"));

                    b.Property<string>("HabitatType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProtectedSpecies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalArea")
                        .HasColumnType("float");

                    b.HasKey("SanctuaryId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Sanctuaries");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.WildlifeData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataId"));

                    b.Property<string>("BehavioralReport")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("BiologistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ObservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PopulationEstimate")
                        .HasColumnType("int");

                    b.Property<int>("SanctuaryId")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DataId");

                    b.HasIndex("SanctuaryId");

                    b.ToTable("WildlifeData");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Animal", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany("Animals")
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.CostManagement", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany()
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.EnvironmentalData", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany()
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Incident", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany()
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.MedicalRecord", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Project", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany()
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Resource", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany("Resources")
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Sanctuary", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.WildlifeData", b =>
                {
                    b.HasOne("WildlifeSanctuaryManagementSystem.Models.Sanctuary", "Sanctuary")
                        .WithMany()
                        .HasForeignKey("SanctuaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sanctuary");
                });

            modelBuilder.Entity("WildlifeSanctuaryManagementSystem.Models.Sanctuary", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Resources");
                });
#pragma warning restore 612, 618
        }
    }
}
